/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;

import ContolesVista.vista_clientes;
import Control.Ciudades_C;
import Control.Clientes_C;
import Vistas.vista_ciudades;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class Clientes_V extends javax.swing.JFrame {

    
//    public static String jtfresul;
    /**
     * Creates new form Clientes_V
     */
    public Clientes_V() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        jtclientes = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jtfclient = new javax.swing.JTextField();
        jtfruc = new javax.swing.JTextField();
        jtftelephone = new javax.swing.JTextField();
        jtfdirection = new javax.swing.JTextField();
        jtfcodciu = new javax.swing.JTextField();
        jtfresult = new javax.swing.JTextField();
        jbsearch = new java.awt.Button();
        jLabel6 = new javax.swing.JLabel();
        jbsave = new javax.swing.JButton();
        jbupdate = new javax.swing.JButton();
        jbdelete = new javax.swing.JButton();
        jbcancel = new javax.swing.JButton();
        jbmodif = new javax.swing.JButton();
        breport = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Clientes");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Clientes"));

        jtclientes.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jtclientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "RUC/CI", "Cliente", "Telefono", "Direccion", "Ciudad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtclientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtclientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtclientes);

        jTextField1.setText("jTextField1");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        java.awt.GridBagLayout jPanel1Layout = new java.awt.GridBagLayout();
        jPanel1Layout.columnWidths = new int[] {0, 12, 0, 12, 0, 12, 0};
        jPanel1Layout.rowHeights = new int[] {0, 10, 0, 10, 0, 10, 0, 10, 0};
        jPanel1.setLayout(jPanel1Layout);

        jLabel1.setText("Cliente *");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel1.add(jLabel1, gridBagConstraints);

        jLabel2.setText("RUC/CI *");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel1.add(jLabel2, gridBagConstraints);

        jLabel3.setText("Direccion");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(jLabel3, gridBagConstraints);

        jLabel4.setText("Telefono *");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(jLabel4, gridBagConstraints);

        jLabel5.setText("Ciudad");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 13);
        jPanel1.add(jLabel5, gridBagConstraints);

        jtfclient.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfclientKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 82;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel1.add(jtfclient, gridBagConstraints);

        jtfruc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfrucKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 82;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel1.add(jtfruc, gridBagConstraints);

        jtftelephone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtftelephoneKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 82;
        jPanel1.add(jtftelephone, gridBagConstraints);

        jtfdirection.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfdirectionKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 82;
        jPanel1.add(jtfdirection, gridBagConstraints);

        jtfcodciu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfcodciuKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfcodciuKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 26;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(jtfcodciu, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 85;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(jtfresult, gridBagConstraints);

        jbsearch.setLabel("Buscar");
        jbsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbsearchActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(jbsearch, gridBagConstraints);

        jLabel6.setText("Cod. Ciudad");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel1.add(jLabel6, gridBagConstraints);

        jbsave.setText("Guardar");
        jbsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbsaveActionPerformed(evt);
            }
        });
        jbsave.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbsaveKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.ipadx = 4;
        gridBagConstraints.weightx = 1.2;
        jPanel1.add(jbsave, gridBagConstraints);

        jbupdate.setText("Actualizar");
        jbupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbupdateActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = 9;
        gridBagConstraints.weightx = 1.2;
        jPanel1.add(jbupdate, gridBagConstraints);

        jbdelete.setText("Eliminar");
        jbdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbdeleteActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.ipadx = 19;
        gridBagConstraints.weightx = 1.2;
        jPanel1.add(jbdelete, gridBagConstraints);

        jbcancel.setText("Cancelar");
        jbcancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbcancelActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.2;
        jPanel1.add(jbcancel, gridBagConstraints);

        jbmodif.setText("Modificar");
        jbmodif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbmodifActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        jPanel1.add(jbmodif, gridBagConstraints);

        breport.setText("Ver Reporte");
        breport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                breportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(breport)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(breport)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbsearchActionPerformed
        
        vista_ciudades c = new vista_ciudades(this, false);
        c.setVisible(true);
        
    }//GEN-LAST:event_jbsearchActionPerformed

    private void jtfcodciuKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfcodciuKeyPressed
        
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            
            String value = jtfcodciu.getText();

            if (value.isEmpty()) {
                
                code = 1;
                
            }
            
            Ciudades_C res = cc.Search(String.valueOf(code));

            if (res == null) {
                
                JOptionPane.showMessageDialog(rootPane, "Codigo no existe");
                this.jtfcodciu.requestFocus();
                
            } else {
                
                this.jtfresult.setText(res.getName());
                jbsave.requestFocus();
            
            }
            
        }
        
    }//GEN-LAST:event_jtfcodciuKeyPressed

    private void jtfclientKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfclientKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            
            if (jtfclient.equals("")) {
                
                JOptionPane.showMessageDialog(rootPane, "Error \nNo se cargo el nombre");
                jtfclient.requestFocus();
                
            } else {
                
                jtftelephone.requestFocus();
            
            }
            
        }
        
    }//GEN-LAST:event_jtfclientKeyPressed

    private void jtfrucKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfrucKeyPressed
        
        this.jbcancel.setEnabled(true);
        
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            
            if (jtfruc.equals("")) {
                
                JOptionPane.showMessageDialog(rootPane, "Error \nRUC o CI requerido");
                jtfruc.requestFocus();
                
            } else {
            
                jtfclient.requestFocus();
            
            } 
                
        }
        
    }//GEN-LAST:event_jtfrucKeyPressed

    private void jtftelephoneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtftelephoneKeyPressed
        
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            
            if (jtftelephone.equals("")) {
                
                JOptionPane.showMessageDialog(rootPane, "Error \nNo se cargo el numero de telefono");
                
            } else {
                
                jtfdirection.requestFocus();
            
            }
            
        }
        
    }//GEN-LAST:event_jtftelephoneKeyPressed

    private void jtfdirectionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfdirectionKeyPressed
        
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            
            if (jtfdirection.equals("")) {
                
                JOptionPane.showMessageDialog(rootPane, "Error \nNo se cargo la direccion");
                
            } else {
                
                jtfcodciu.requestFocus();
            
            }
            
        }
        
    }//GEN-LAST:event_jtfdirectionKeyPressed

    private void jbsaveKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbsaveKeyPressed
        
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            
            this.jbsaveActionPerformed(null);
            
        }
        
    }//GEN-LAST:event_jbsaveKeyPressed

    private void jbsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbsaveActionPerformed
        
        this.Count();
        code = getInt(this.jTextField1.getText());
        ruc = jtfruc.getText();
        client = jtfclient.getText();
        telephone = jtftelephone.getText();
        direction = jtfdirection.getText();
        city = getInt(jtfcodciu.getText());
        
        if ((code <= 0) || (ruc.isEmpty()) || (client.isEmpty()) || (telephone.isEmpty())) {
            
            JOptionPane.showMessageDialog(rootPane, "No registrada. \nComplete los campos obligatorios.");
            
        } else {
            
            if (direction.isEmpty()) {direction = "Sin especificar"; }
            if (city == 0) { city = 1; }

            Clientes_C cod = new Clientes_C(code, ruc, client, telephone, direction, city);
            Clientes_C ok = cod.ConsultRuc(ruc);
            
            if (ok == null) {
                
                if (cod.Insert()) {
                    
                    JOptionPane.showMessageDialog(rootPane, "Registrado con exito");
                    
                } else {
                    
                    JOptionPane.showMessageDialog(rootPane, "No registrado \n Complete los campos");
                    
                }
                
            } else {
                
                JOptionPane.showMessageDialog(rootPane, "Ya existe");
                jtfcodciu.setText(String.valueOf(ok.getId()));
                jtfclient.setText(ok.getNombre());
                jtfruc.setText(ok.getRuc_ci());
                jtftelephone.setText(ok.getTelefono());
                jtfdirection.setText(ok.getDireccion());
                
            }
            
            dtm = (DefaultTableModel) jtclientes.getModel();
            int rows = jtclientes.getRowCount();
            for (int i = 0; rows > i; i++) {
                
                dtm.removeRow(0);
                
            }
            
            this.update();
            this.star();
            
        }
        
    }//GEN-LAST:event_jbsaveActionPerformed

    private void jtclientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtclientesMouseClicked

        this.jbsearch.setEnabled(false);
        try {
            
            dtm = (DefaultTableModel) this.jtclientes.getModel();
            int selRow = this.jtclientes.getSelectedRow();
            this.jbmodif.setEnabled(true);
            this.jbdelete.setEnabled(true);

            if(selRow != -1){

                String id = String.valueOf(dtm.getValueAt(selRow, 0).toString());
                Clientes_C finded = c.Search(id);
                vista_clientes find = vc.ShowCity(id);

                if(!(finded == null || (find == null))){

                    this.jTextField1.setText(String.valueOf(finded.getId()));
                    this.jtfruc.setText(finded.getRuc_ci());
                    this.jtfruc.setEditable(false);
                    this.jtfclient.setText(finded.getNombre());
                    this.jtfclient.setEditable(false);
                    this.jtftelephone.setText(finded.getTelefono());
                    this.jtftelephone.setEditable(false);
                    this.jtfdirection.setText(finded.getDireccion());
                    this.jtfdirection.setEditable(false);
                    this.jtfcodciu.setText(String.valueOf(finded.getCiudad()));
                    this.jtfcodciu.setEditable(false);
                    this.jtfresult.setText(String.valueOf(find.getCity()));

                 }

            }
            
        } catch (Exception e) {
            
            JOptionPane.showMessageDialog(null, "Error al encontrar archivo"+e);
            
        }
        
    }//GEN-LAST:event_jtclientesMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        
        this.star();
        this.jTextField1.setVisible(false);
        this.jtfresult.setEditable(false);
        
    }//GEN-LAST:event_formWindowOpened

    private void jbupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbupdateActionPerformed
        
        code = getInt(jTextField1.getText());
        ruc = jtfruc.getText();
        client = jtfclient.getText();
        telephone = jtftelephone.getText();
        direction = jtfdirection.getText();
        city = getInt(jtfcodciu.getText());

        if ((code <= 0) || (ruc.isEmpty()) || (client.isEmpty()) || (telephone.isEmpty())) {

            JOptionPane.showMessageDialog(rootPane, "No se pudo modificar. \nLos campos obligatorios no pueden quedar nulos");

        } else {

            if (direction.isEmpty()) { direction = "Sin asignar"; }
            if (city == 0) { city = 1; }
        
            Clientes_C mci = new Clientes_C(code, client, ruc, telephone, direction, city);

            if (mci.Update()) {

                JOptionPane.showMessageDialog(rootPane, "Registro modficado");
                this.update();
                this.star();
                clean();

            } else {

                JOptionPane.showMessageDialog(rootPane, "No modificado");

            }

        }
        
    }//GEN-LAST:event_jbupdateActionPerformed

    private void jbdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbdeleteActionPerformed
        
        String cod = jTextField1.getText();
        Clientes_C us = new Clientes_C();
        
        if(us.Delete(cod)){
            
            JOptionPane.showMessageDialog(this, "Eliminando satisfactoriamente");
            
        }else{
            
            JOptionPane.showMessageDialog(this, "Imposible eliminar");
            
        }
        
        this.update();
        this.star();
        clean();
        
    }//GEN-LAST:event_jbdeleteActionPerformed

    private void jbcancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbcancelActionPerformed

        dispose();
        clean();
        
    }//GEN-LAST:event_jbcancelActionPerformed

    private void jbmodifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbmodifActionPerformed
        
        try {
            
            this.jbupdate.setEnabled(true);
            this.jbsave.setEnabled(false);
            this.jbsearch.setEnabled(true);
            this.jtfclient.setEditable(true);
            this.jtfruc.setEditable(true);
            this.jtftelephone.setEditable(true);
            this.jtfdirection.setEditable(true);
            this.jtfcodciu.setEditable(true);
            this.jbsearch.setEnabled(true);
            
        } catch (Exception e) {
            
            System.err.println(e);
            
        }
        
    }//GEN-LAST:event_jbmodifActionPerformed

    private void breportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_breportActionPerformed
        
        vc.showClientes();

    }//GEN-LAST:event_breportActionPerformed

    private void jtfcodciuKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfcodciuKeyTyped
        
        char numero = evt.getKeyChar();

        if (Character.isLetter(numero)) {

            getToolkit().beep();
            evt.consume();

        }

    }//GEN-LAST:event_jtfcodciuKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Clientes_V.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Clientes_V.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Clientes_V.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Clientes_V.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Clientes_V().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton breport;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton jbcancel;
    private javax.swing.JButton jbdelete;
    private javax.swing.JButton jbmodif;
    private javax.swing.JButton jbsave;
    private java.awt.Button jbsearch;
    private javax.swing.JButton jbupdate;
    private javax.swing.JTable jtclientes;
    private javax.swing.JTextField jtfclient;
    public static javax.swing.JTextField jtfcodciu;
    private javax.swing.JTextField jtfdirection;
    public static javax.swing.JTextField jtfresult;
    private javax.swing.JTextField jtfruc;
    private javax.swing.JTextField jtftelephone;
    // End of variables declaration//GEN-END:variables

    DefaultTableModel dtm;
    private int code, city;
    private String client, ruc, telephone, direction;
    private final vista_clientes vc = new vista_clientes();
    private final Clientes_C c = new Clientes_C();
    private final Ciudades_C cc = new Ciudades_C();

    private void Count () {
    
        try {
            
            Clientes_C a = new Clientes_C();
            jTextField1.setText(a.New());
            
        } catch (Exception e) {
            
            System.err.println(e.getMessage());
            
        }
    
    }
    
    private void clean () {

        this.jTextField1.setText("");
        this.jtfruc.setText("");
        this.jtfclient.setText("");
        this.jtftelephone.setText("");
        this.jtfdirection.setText("");
        this.jtfcodciu.setText("");
        this.jtfresult.setText("");

    }
    
    private void update() {
        
        int tam = jtclientes.getRowCount();
        for (int i = 0; i < tam; i++) {
            
            dtm.removeRow(0);
            
        }
        
    }
    
    private void star () {
        
        dtm = (DefaultTableModel) jtclientes.getModel();
        vista_clientes c = new vista_clientes();
        ArrayList<vista_clientes> all = c.Buscar();
        
        for(int i=0; i < all.size(); i++ ){
            
            dtm.addRow(new Object[]{all.get(i).getCodigo(), all.get(i).getRuc_ci(),
            all.get(i).getName(), all.get(i).getTelephone(), all.get(i).getDirection(),
            all.get(i).getCity()});
            
        }
        
        this.jbmodif.setEnabled(false);
        this.jbcancel.setEnabled(false);
        this.jbupdate.setEnabled(false);
        this.jbdelete.setEnabled(false);
        
        
    }
    
    public void verified () {
    
        for (int i = 0; i < jtclientes.getRowCount(); i++) {
            
            if (jtclientes.getValueAt(i, 1).equals(jtfruc.getText())) {
                
                JOptionPane.showMessageDialog(rootPane, "El RUC o CI ya existe");
                dtm.removeRow(i);
                
            }
            
        }
    
    }
    
    public static Integer getInt(String cadena){
        return ( (cadena == null || cadena.isEmpty() ) ? 0 : Integer.parseInt(cadena.trim()));
    }
    
}
