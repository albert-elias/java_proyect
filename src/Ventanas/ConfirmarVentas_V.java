/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;

import ContolesVista.vista_confirmar;
import ContolesVista.vista_detalle_ventas;
import ContolesVista.vista_modopago;
import ContolesVista.vista_ventas;
import Control.ConfirmarVentas_C;
import Control.ModoPago_C;
import Control.Ventas_C;
import Modelos.Ventas_M;
import ModelosVista.view_confirm;
import ModelosVista.view_modepay;
import ModelosVista.view_sale;
import java.awt.event.ItemEvent;
import java.text.DecimalFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class ConfirmarVentas_V extends javax.swing.JFrame {

    /**
     * Creates new form DetalleMP_V
     */
    public ConfirmarVentas_V() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        tconfirmvent = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cbmode = new javax.swing.JComboBox();
        tfmontres = new javax.swing.JTextField();
        baccept = new javax.swing.JButton();
        bcancel = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        tfcodevent = new javax.swing.JTextField();
        tfmont = new javax.swing.JTextField();
        bconfirm = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tdetalle = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Confirmar Ventas");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        tconfirmvent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Venta", "Cliente", "Vendedor"
            }
        ));
        tconfirmvent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tconfirmventMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tconfirmvent);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        java.awt.GridBagLayout jPanel1Layout = new java.awt.GridBagLayout();
        jPanel1Layout.columnWidths = new int[] {0, 7, 0, 7, 0};
        jPanel1Layout.rowHeights = new int[] {0, 10, 0, 10, 0};
        jPanel1.setLayout(jPanel1Layout);

        jLabel1.setText("Modo de pago");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel1.add(jLabel1, gridBagConstraints);

        cbmode.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbmodeItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 76;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(cbmode, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.weightx = 0.2;
        jPanel1.add(tfmontres, gridBagConstraints);

        baccept.setText("Aceptar");
        baccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bacceptActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 34;
        jPanel1.add(baccept, gridBagConstraints);

        bcancel.setText("Cancelar");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 26;
        jPanel1.add(bcancel, gridBagConstraints);

        jLabel2.setText("Venta Seleccionada:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel1.add(jLabel2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 98;
        jPanel1.add(tfcodevent, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 100;
        jPanel1.add(tfmont, gridBagConstraints);

        bconfirm.setText("Confirmar");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 25;
        jPanel1.add(bconfirm, gridBagConstraints);

        tdetalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Modo de Pago", "Monto"
            }
        ));
        jScrollPane2.setViewportView(tdetalle);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tconfirmventMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tconfirmventMouseClicked
        
        dtm = (DefaultTableModel) tconfirmvent.getModel();
        int selrow = tconfirmvent.getSelectedRow();
        
        if (selrow != -1) {
            
            this.baccept.setEnabled(true);
            String id = tconfirmvent.getValueAt(selrow, 0).toString();
            Ventas_C v = new Ventas_C();
            Ventas_C value = v.Search(id);
            
            if (!(value == null)) {
                
                unvalid();
                tfcodevent.setText(String.valueOf(value.getId()));
                int codigo = getInt(tfcodevent.getText());
                vista_detalle_ventas vdv = new vista_detalle_ventas();
                int mont = getInt(vdv.ConsultMonto(codigo));
                System.out.println(mont);
                tfmontres.setText(format.format(mont));
                System.out.println(tfmontres.getText());
                
            }
            
        }
        
    }//GEN-LAST:event_tconfirmventMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        
        star();
        star2();
        cb_valid();
        unvalid();
        
    }//GEN-LAST:event_formWindowOpened

    private void bacceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bacceptActionPerformed
        
        code = getInt(tfcodevent.getText());
        modopago = cbmode.getSelectedIndex()+1;
        monto = getInt(tfmont.getText());
        precio = getInt(tfmontres.getText().trim());
        int count = getInt(cv.Count(code));
        
        if (modopago > 0) {
        
            if (monto > 0) {
                
                if (count == 2) {
                    
                    if (monto < precio) {
                        
                        JOptionPane.showMessageDialog(tconfirmvent, "Limite de la forma de pago alcanzada \nPague la totalidad del restante");
                        
                    }
                    
                } else {
                
                    if (monto <= precio) {
                    
                    ConfirmarVentas_C values = new ConfirmarVentas_C(modopago, code, monto);
                    values.Insert();
                    int res = precio - monto;
                        
                        if (res <= 0) {
                            
                            tfmontres.setText("0");
                            tfmont.setText("0");
                            this.baccept.setEnabled(false);
                            this.bconfirm.requestFocus();
                            
                        } else {
                        
                            tfmontres.setText(format.format(res));
                            tfmont.setText("0");
                            
                        }
                    
                    }
                
                }
                
            } else {
            
                JOptionPane.showMessageDialog(tconfirmvent, "Cargue el monto");
            
            }
            
        } else {
        
            JOptionPane.showMessageDialog(tconfirmvent, "Seleccione un modo de cobro");
        
        }
        
    }//GEN-LAST:event_bacceptActionPerformed

    private void cbmodeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbmodeItemStateChanged
        
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            
            int id = getInt(mp.ConsultID(String.valueOf(evt.getItem())));
            tfmont.setText(cv.Monto(id));
            
        }
        
    }//GEN-LAST:event_cbmodeItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConfirmarVentas_V.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConfirmarVentas_V.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConfirmarVentas_V.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConfirmarVentas_V.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConfirmarVentas_V().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton baccept;
    private javax.swing.JButton bcancel;
    private javax.swing.JButton bconfirm;
    private javax.swing.JComboBox cbmode;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tconfirmvent;
    private javax.swing.JTable tdetalle;
    private javax.swing.JTextField tfcodevent;
    private javax.swing.JTextField tfmont;
    private javax.swing.JTextField tfmontres;
    // End of variables declaration//GEN-END:variables

    DefaultTableModel dtm;
    private int precio, code, modopago, monto;
    private final vista_confirmar vc = new vista_confirmar();
    private final ModoPago_C mp = new ModoPago_C();
    private final ConfirmarVentas_C cv = new ConfirmarVentas_C();
    private final vista_ventas vv = new vista_ventas();
    private final vista_modopago vmp = new vista_modopago();
    DecimalFormat format = new DecimalFormat("#,##0");

    private void star () {

        this.baccept.setEnabled(false);
        dtm = (DefaultTableModel)tconfirmvent.getModel();
        ArrayList<vista_confirmar> values = vc.SearchAll();
        
        for (view_confirm value : values) {
            
            dtm.addRow(new Object[]{value.getCode(), value.getClient(), value.getClerk()});
            
        }
    
    }
    
    private void star2 () {
    
        dtm = (DefaultTableModel)tdetalle.getModel();
        ArrayList<vista_modopago> value = vmp.buscarmodopago();
        
        for (view_modepay values : value) {
            
            dtm.addRow(new Object[]{values.getModo(), values.getMonto()});
            
        }
        
    
    }
    
    private void cb_valid () {
    
        ModoPago_C mp = new ModoPago_C();
        ArrayList<ModoPago_C> lista = mp.SearchAll();
        
        for (int i = 0; i < lista.size(); i++) {
            
            cbmode.addItem(lista.get(i).getName().trim());
            
        }
        
        this.cbmode.setSelectedIndex(-1);
        
    }
    
    private void update () {
        
        int tam = tconfirmvent.getRowCount();
        
        for (int i = 0; i < tam; i++) {
            
            dtm.removeRow(0);
            
        }
        
    }
    
    private void unvalid () {
    
        this.tfcodevent.setEditable(false);
        this.tfmontres.setEditable(false);
    
    }
    
    public static Integer getInt(String cadena){
        
        return ( (cadena == null || cadena.isEmpty() ) ? 0 : Integer.parseInt(cadena.trim()));
        
    }
    
}
