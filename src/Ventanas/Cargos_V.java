/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;

import Control.CargosC;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class Cargos_V extends javax.swing.JFrame {

    /**
     * Creates new form Cargos_V
     */
    public Cargos_V() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jbmod = new javax.swing.JButton();
        jbelim = new javax.swing.JButton();
        jbnuevo = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtcargos = new javax.swing.JTable();
        jbsalir = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        breport = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Opciones"));
        java.awt.GridBagLayout jPanel1Layout = new java.awt.GridBagLayout();
        jPanel1Layout.columnWidths = new int[] {0, 12, 0, 12, 0};
        jPanel1Layout.rowHeights = new int[] {0};
        jPanel1.setLayout(jPanel1Layout);

        jbmod.setText("Modificar");
        jbmod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbmodActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel1.add(jbmod, gridBagConstraints);

        jbelim.setText("Eliminar");
        jbelim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbelimActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        jPanel1.add(jbelim, gridBagConstraints);

        jbnuevo.setText("Nuevo");
        jbnuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbnuevoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        jPanel1.add(jbnuevo, gridBagConstraints);

        jLabel1.setText("CARGOS LABORALES");

        jtcargos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtcargos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtcargosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtcargos);

        jbsalir.setText("x");
        jbsalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbsalirActionPerformed(evt);
            }
        });

        breport.setText("Ver Reporte");
        breport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                breportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(125, 125, 125)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbsalir))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(breport))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jbsalir)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(breport)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbelimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbelimActionPerformed
        
        String code = jTextField1.getText();
        
        if (c.Delete(code)) {
            
            JOptionPane.showMessageDialog(this, "Eliminando satisfactoriamente");
            
        } else {
            
            JOptionPane.showMessageDialog(this, "Imposible eliminar");
            
        }
        
        this.update();
        this.star();
        
    }//GEN-LAST:event_jbelimActionPerformed

    private void jbsalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbsalirActionPerformed
        
        this.dispose();
        
    }//GEN-LAST:event_jbsalirActionPerformed

    private void jbnuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbnuevoActionPerformed
        
        this.Count();
        number = getInt(this.jTextField1.getText());
        name = JOptionPane.showInputDialog("Nuevo cargo: ");
        
        if (name == null) {
            
            int response = getInt(name);
            
            if (response == JOptionPane.CANCEL_OPTION) {
                
                JOptionPane.showMessageDialog(rootPane, "Cancelado");
                
            }
            
            return;
            
        }

        if (name.isEmpty()) {

            JOptionPane.showMessageDialog(rootPane, "Campo vacio");
            
        } else {
        
            CargosC a = new CargosC(number, name);
            CargosC already = a.Search(String.valueOf(number));
            
            if (already == null) {
                
                if (a.Insert()) {
                    
                    JOptionPane.showMessageDialog(rootPane, "Registro exitoso!");
                    
                } else {
                
                    JOptionPane.showMessageDialog(rootPane, "Ya existe: "+name+"");
                    
                    
                }
                
                t_cargos = (DefaultTableModel) jtcargos.getModel();
                int rows = jtcargos.getRowCount();
                for (int i = 0; rows < i; i++) {
                    
                    t_cargos.removeRow(0);
                    
                }
                
                this.update();
                this.star();
                
            }
        
        }
        
    }//GEN-LAST:event_jbnuevoActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        
        this.jTextField1.setVisible(false);
        this.jbelim.setEnabled(false);
        this.jbmod.setEnabled(false);
        this.star();
        
    }//GEN-LAST:event_formWindowOpened

    private void jtcargosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtcargosMouseClicked

        this.jbelim.setEnabled(true);
        this.jbmod.setEnabled(true);
        t_cargos = (DefaultTableModel) this.jtcargos.getModel();
        int selRow = this.jtcargos.getSelectedRow();
        
        if(selRow != -1){
            
            String id = t_cargos.getValueAt(selRow, 0).toString();
            CargosC finded = c.Search(id);
            
            if(!(finded == null)){
                
                this.jTextField1.setText(String.valueOf(finded.getId()));
                
            }
            
        }
        
    }//GEN-LAST:event_jtcargosMouseClicked

    private void jbmodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbmodActionPerformed

        number = getInt(this.jTextField1.getText());
        name = JOptionPane.showInputDialog("Nuevo nombre: ");
        CargosC upd = new CargosC(number, name);
        
        if (name == null) {
            
            int response = getInt(name);
            
            if (response == JOptionPane.CANCEL_OPTION) {
                
                JOptionPane.showMessageDialog(rootPane, "Cancelado");
                
            }
            
            return;
            
        }

        if (name.isEmpty()) {

            JOptionPane.showMessageDialog(rootPane, "Campo vacio");
            
        } else {

            if (upd.Update()) {

                JOptionPane.showMessageDialog(rootPane, "Registro modficado");
                this.update();
                this.star();

            } else {

                JOptionPane.showMessageDialog(rootPane, "No modificado");

            }

        }

        

    }//GEN-LAST:event_jbmodActionPerformed

    private void breportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_breportActionPerformed
        
        c.showCargos();

    }//GEN-LAST:event_breportActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cargos_V.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cargos_V.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cargos_V.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cargos_V.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cargos_V().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton breport;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton jbelim;
    private javax.swing.JButton jbmod;
    private javax.swing.JButton jbnuevo;
    private javax.swing.JButton jbsalir;
    private javax.swing.JTable jtcargos;
    // End of variables declaration//GEN-END:variables

    DefaultTableModel t_cargos;
    private int number;
    private String name;
    private final CargosC c = new CargosC();

    private void Count () {
    
        try {
            
            jTextField1.setText(c.New());
            
        } catch (Exception e) {
            
            
            
        }
    
    }
    
    private void update () {
        
        int tam = jtcargos.getRowCount();
        
        for (int i = 0; i < tam; i++) {
            
            t_cargos.removeRow(0);
            
        }
        
    }

    private void star () {
        
        t_cargos = (DefaultTableModel) jtcargos.getModel();
        ArrayList<CargosC> all = c.SearchAll();
        
        for(int i=0; i < all.size(); i++ ){
            
            t_cargos.addRow(new Object[]{all.get(i).getId(), all.get(i).getName()});
            
        }
        
        this.jTextField1.setText("");
        
    }
    
    public static Integer getInt(String cadena){
        return ( (cadena == null || cadena.isEmpty() ) ? 0 : Integer.parseInt(cadena.trim()));
    }
    
    public static String getString(String cadena){
        return (cadena == null ? "" : cadena);
    }
    
}
